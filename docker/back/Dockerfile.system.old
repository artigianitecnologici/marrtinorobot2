# Docker file for MARRtino2 software
# ROS humble
# System image - humble

# docker build -t marrtinorobot2:system -f Dockerfile.system .
FROM osrf/ros:humble-desktop-jammy

ARG ROS_DISTRO=$ROS_DISTRO
ARG PREFIX=

ARG UID=1000
ARG GID=1000

ARG DEBIAN_FRONTEND=noninteractive

# install bootstrap tools 
RUN apt-get update && apt-get install --no-install-recommends -y \
    tmux less sudo eom nano git \
    openssl shellinabox netcat \
    wget iputils-ping net-tools openssh-client nginx \
    python3-pip libwebsockets-dev \
    build-essential \
    python3-rosdep \
    python3-rosinstall \
    python3-vcstools \
    && rm -rf /var/lib/apt/lists/*

# install ros packages
RUN apt-get update && apt-get install -y \
    cmake \
    curl \
    gazebo \
    terminator \
    libglu1-mesa-dev \
    nano \
    python3-pip \
    python3-pydantic \
    python3-vcstool \
    build-essential \
    ros-$ROS_DISTRO-joint-state-publisher \
    ros-$ROS_DISTRO-robot-localization \
    ros-$ROS_DISTRO-plotjuggler-ros \
    ros-$ROS_DISTRO-robot-state-publisher \
    ros-$ROS_DISTRO-ros2bag \
    ros-$ROS_DISTRO-rosbag2-storage-default-plugins \
    ros-$ROS_DISTRO-rqt-tf-tree \
    ros-$ROS_DISTRO-rmw-fastrtps-cpp \
    ros-$ROS_DISTRO-rmw-cyclonedds-cpp \
    ros-$ROS_DISTRO-slam-toolbox \
    ros-$ROS_DISTRO-marrtinorobot2 \
    ros-$ROS_DISTRO-marrtinorobot2-msgs \
    ros-$ROS_DISTRO-twist-mux \
    ros-$ROS_DISTRO-usb-cam \
    ros-$ROS_DISTRO-xacro \
    ruby-dev \
    rviz \
    tmux \
    wget \
    xorg-dev \
    zsh

# Bumperbot
RUN command apt-get update && sudo apt-get install -y \
     ros-$ROS_DISTRO-ros2-controllers \
     ros-$ROS_DISTRO-ros2-control \
     ros-$ROS_DISTRO-gazebo-ros \
     ros-$ROS_DISTRO-gazebo-ros-pkgs \
     ros-$ROS_DISTRO-gazebo-ros2-control \
     ros-$ROS_DISTRO-joint-state-publisher-gui \
     ros-$ROS_DISTRO-teleop-twist-keyboard \
     ros-$ROS_DISTRO-teleop-twist-joy \
     ros-$ROS_DISTRO-turtlesim \
     ros-$ROS_DISTRO-robot-localization \
     ros-$ROS_DISTRO-tf-transformations

RUN apt-get update && apt-get install -y --no-install-recommends \
        ros-dev-tools \
        ros-$ROS_DISTRO-ament-* \
    && rm -rf /var/lib/apt/lists/*
# User: robot (password: robot) with sudo power

RUN useradd -ms /bin/bash robot && echo "robot:robot" | chpasswd && adduser robot sudo
RUN usermod -u $UID robot && groupmod -g $GID robot

RUN adduser robot audio
RUN adduser robot video
RUN adduser robot dialout

###### User robot ######
WORKDIR /home/robot

USER robot

# Configuration
RUN echo "export MARRTINOROBOT2_BASE=2wd" >> ~/.bashrc
RUN echo "export MARRTINOROBOT2_LASER_SENSOR=rplidar" >> ~/.bashrc
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc



RUN echo "set -g mouse on" > $HOME/.tmux.conf 

# Python packages

#RUN pip3 install --user tornado==5.0.2
#RUN pip3 install --user threaded
RUN . /opt/ros/$ROS_DISTRO/setup.sh \ 
    cd $HOME \
    mkdir -p $HOME/marrtinorobot2_ws/src \
    cd $HOME/marrtinorobot2_ws \
    colcon build


RUN mkdir -p $HOME/src && \
    cd $HOME/src && \
    git clone  https://github.com/artigianitecnologici/marrtinorobot2.git

#### create workspace
RUN cd $HOME
RUN mkdir -p $HOME/marrtinorobot2_ws/src

#RUN source /opt/ros/$ROS_DISTRO/setup.bash
RUN cd $HOME/marrtinorobot2_ws/src && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_base . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_bringup . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_description . && \  
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_gazebo . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_navigation . 

USER root

  
WORKDIR /home/robot
RUN . /opt/ros/$ROS_DISTRO/setup.sh \ 
    cd marrtinorobot2_ws  && \ 
    rm -rf /etc/ros/rosdep/sources.list.d/20-default.list  && \
    rosdep init && \
    rosdep update

USER robot
RUN . /opt/ros/$ROS_DISTRO/setup.sh \ 
     rosdep install --from-path src --ignore-src -y --skip-keys microxrcedds_agent --skip-keys micro_ros_agent

USER robot

RUN cd marrtinorobot2_ws  && \ 
    colcon build


#RUN echo ". /marrtinorobot2_ws/install/setup.bash" >> ~/.bashrc
# Set working dir and container command

WORKDIR /home/robot

CMD [ "/usr/bin/terminator" ]


