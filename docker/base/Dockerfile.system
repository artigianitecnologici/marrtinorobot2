# Basato su Ubuntu 22.04 (Jammy) e ROS Humble
# Immagine base con ROS 2 Humble preconfigurato
FROM ros:humble-ros-base

# Definizione delle variabili
ARG GITHUB_TOKEN
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble

LABEL maintainer="ferrarini09@gmail.com"
#ENV GITHUB_TOKEN=${GITHUB_TOKEN}
SHELL ["/bin/bash", "-c"]

RUN echo -e "\033[1;32m=== install docker ROS2  $ROS_DISTRO ===\033[0m"
# Aggiornamento e installazione di pacchetti necessari
RUN apt-get update && \
    apt-get install -y \
        wget curl gosu git sudo python3-pip nano \
        build-essential lsb-release locales bash-completion tzdata \
        terminator dos2unix net-tools htop tmux \
        libgflags-dev nlohmann-json3-dev libgoogle-glog-dev \
        mpg321 sox libttspico-utils gnupg2 \
        v4l-utils python3-colcon-common-extensions \
        python3-vcstool && \
    apt-get autoclean && apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Creazione utente ubuntu

RUN echo -e "\033[1;32m=== Create user ubuntu \033[0m"
RUN useradd -m -s /bin/bash ubuntu && \
    echo "ubuntu:ubuntu" | chpasswd && \
    usermod -aG sudo ubuntu && \
    echo "ubuntu ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers


# USER root
RUN apt-get update && \
    apt-get install -y python3-vcstool build-essential
RUN mkdir -p /home/ubuntu/marrtinorobot2_ws/src 
WORKDIR /home/ubuntu/marrtinorobot2_ws

RUN git clone --depth 1 -b ${ROS_DISTRO} https://github.com/micro-ROS/micro_ros_setup.git src/micro_ros_setup && \
    . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt update && \
    apt install -y ed python3-pip && \
    apt install -y ros-$ROS_DISTRO-rmw-fastrtps-cpp && \
    apt remove -y ros-$ROS_DISTRO-rmw-cyclonedds-cpp && \
    apt autoremove -y && \
    rosdep update --rosdistro $ROS_DISTRO && \
    rosdep install --from-paths src --ignore-src -y && \
    colcon build && \
    echo $(/home/ubuntu/marrtinorobot2_ws /home/ubuntu/marrtinorobot2_ws/src/micro_ros_setup/package.xml | grep '<version>' | sed -r 's/.*<version>([0-9]+.[0-9]+.[0-9]+)<\/version>/\1/g') > /version.txt && \
    rm -rf log/ build/ src/* && \
    rm -rf /var/lib/apt/lists/*

RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    . install/local_setup.sh && \
    apt update && \
    ros2 run micro_ros_setup create_agent_ws.sh && \
    ros2 run micro_ros_setup build_agent.sh && \
    rm -rf log/ build/ src/

RUN apt-get update -q && \
    apt-get install -y \
    mpg321 sox  libttspico-utils 

RUN pip3 install gtts opencv-python opencv-python-headless


# Installazione di pacchetti e repository MARRtino
RUN mkdir -p /home/ubuntu/marrtinorobot2_ws/src && \
    mkdir -p /home/ubuntu/src && \
    cd /home/ubuntu/src && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench.git && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench-msgs.git && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git && \
    git clone https://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@github.com/artigianitecnologici/marrtinorobot2.git && \
    git clone https://github.com/robo-friends/m-explore-ros2.git
        # git clone https://github.com/orbbec/OrbbecSDK_ROS2.git && \
        #git clone -b ${ROS_DISTRO} https://github.com/micro-ROS/micro_ros_setup.git /home/ubuntu/marrtinorobot2_ws/src/micro_ros_setup && \

WORKDIR /home/ubuntu/marrtinorobot2_ws/src
RUN ln -s /home/ubuntu/src/DynamixelSDK . && \
    ln -s /home/ubuntu/src/dynamixel-workbench-msgs . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_base . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_bringup . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_description . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_webinterface . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_gazebo . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_navigation . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_vision . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_voice . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_ps4_joy_controller . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_cartographer . && \
    ln -s /home/ubuntu/src/m-explore-ros2/explore .

# Configurazione finale per l'utente 'ubuntu'
WORKDIR /home/ubuntu/marrtinorobot2_ws
RUN rosdep update && \
    rosdep install --from-paths src --ignore-src -r -y
    
RUN source /opt/ros/$ROS_DISTRO/setup.bash && \
    colcon build  && \
    source /home/ubuntu/marrtinorobot2_ws/install/setup.bash

RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "source /home/ubuntu/marrtinorobot2_ws/install/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_BASE=2wd" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_LASER_SENSOR=rplidar" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_DEPTH_SENSOR=oakdlite" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_WEBI=$HOME/src/marrtinorobot2/marrtinorobot2_webinterface/www" >> $HOME/.bashrc && \
    echo "export MARRTINOROBOT2_WS=$HOME/marrtinorobot2_ws" >> $HOME/.bashrc && \
    echo "alias cdmd='cd ~/src/marrtinorobot2/docker'" >> $HOME/.bashrc && \
    echo "alias cdm='cd ~/src/marrtinorobot2'" >> $HOME/.bashrc && \
    echo "alias cb='cd ~/marrtinorobot2 && colcon build'" >> $HOME/.bashrc





#
RUN echo -e "\033[1;32m=== Install lIBRARY $ROS_DISTRO ===\033[0m"


RUN apt-get clean && rm -rf /var/lib/apt/lists/*



USER ubuntu
WORKDIR /home/ubuntu
# COPY ./entrypoint.sh /
# RUN chmod +x /entrypoint.sh && dos2unix /entrypoint.sh

# Impostazione entrypoint e variabili d'ambiente
CMD ["tmux", "-u"]

#CMD [ "/bin/bash", "-ci", "/home/robot/src/marrtino_apps/bringup/1-bringup.bash" ]
