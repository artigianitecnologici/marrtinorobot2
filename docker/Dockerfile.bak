# Basato su Ubuntu 22.04 (Jammy) e ROS Humble
FROM ubuntu:jammy-20240416

ARG TARGETPLATFORM
ARG GITHUB_TOKEN
LABEL maintainer="ferrarini09@gmail.com"

SHELL ["/bin/bash", "-c"]

# Aggiornamento e installazione di pacchetti necessari
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        ubuntu-mate-desktop \
        tigervnc-standalone-server tigervnc-common \
        supervisor wget curl gosu git sudo python3-pip tini \
        build-essential vim lsb-release locales bash-completion tzdata \
        terminator dos2unix net-tools htop xrdp tmux \
        libgflags-dev nlohmann-json3-dev libgoogle-glog-dev \
        mpg321 sox  libttspico-utils \
        v4l-utils mpg321 sox libttspico-utils && \
    apt-get autoclean && apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Installazione noVNC e Websockify
RUN git clone https://github.com/AtsushiSaito/noVNC.git -b add_clipboard_support /usr/lib/novnc && \
    pip install git+https://github.com/novnc/websockify.git@v0.10.0 && \
    ln -s /usr/lib/novnc/vnc.html /usr/lib/novnc/index.html && \
    sed -i "s/UI.initSetting('resize', 'off');/UI.initSetting('resize', 'remote');/g" /usr/lib/novnc/app/ui.js

# Disabilita aggiornamenti automatici e crash report
RUN sed -i 's/Prompt=.*/Prompt=never/' /etc/update-manager/release-upgrades && \
    sed -i 's/enabled=1/enabled=0/g' /etc/default/apport

# Installazione ROS Humble
ENV ROS_DISTRO humble
ARG INSTALL_PACKAGE=desktop

RUN apt-get update && \
    apt-get install -y curl gnupg2 && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-${INSTALL_PACKAGE} \
        python3-argcomplete python3-colcon-common-extensions \
        python3-rosdep python3-vcstool && \
    rosdep init && rosdep update && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y ros-$ROS_DISTRO-rplidar-ros  && \
    ros-${ROS_DISTRO}-localization && \
    ros-${ROS_DISTRO}-navigation2  && \
    ros-${ROS_DISTRO}-nav2-bringup && \
    ros-${ROS_DISTRO}-camera-calibration-parsers && \
    ros-${ROS_DISTRO}-camera-info-manager && \
    ros-${ROS_DISTRO}-launch-testing-ament-cmake && \
    ros-${ROS_DISTRO}-robot-localization && \
    ros-${ROS_DISTRO}-rosbridge-server -y && \
    ros-${ROS_DISTRO}-joy


RUN pip3 install gtts opencv-python opencv-python-headless
RUN apt install mpg321 sox  libttspico-utils -y

# Installazione pacchetti simulazione solo su amd64
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-gazebo-ros-pkgs ros-${ROS_DISTRO}-ros-ign && \
    rm -rf /var/lib/apt/lists/*; \
    fi




# Creazione utente 'ubuntu' e abilitazione sudo
RUN useradd -m -s /bin/bash ubuntu && \
    echo "ubuntu:ubuntu" | chpasswd && \
    usermod -aG sudo ubuntu

USER ubuntu
WORKDIR /home/ubuntu

# Installazione di pacchetti e repository MARRtino
RUN echo "mate-session" > /home/ubuntu/.xsession && \
    mkdir -p /home/ubuntu/marrtinorobot2_ws/src && \
    git clone -b ${ROS_DISTRO} https://github.com/micro-ROS/micro_ros_setup.git /home/ubuntu/marrtinorobot2_ws/src/micro_ros_setup && \
    mkdir -p /home/ubuntu/src && \
    cd /home/ubuntu/src && \
    git clone https://github.com/orbbec/OrbbecSDK_ROS2.git && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench.git && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench-msgs.git && \
    git clone -b humble-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git && \
    git clone https://${GITHUB_TOKEN}@github.com/artigianitecnologici/marrtinorobot2.git

WORKDIR /home/ubuntu/marrtinorobot2_ws/src

RUN ln -s /home/ubuntu/src/DynamixelSDK . && \
    ln -s /home/ubuntu/src/dynamixel-workbench-msgs . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_base . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_bringup . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_description . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_webinterface . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_gazebo . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_navigation . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_vision . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_voice . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_ps4_joy_controller . && \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_cartographer .&& \
    ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_dynamixel . && \
    ln -s /home/ubuntu/src/m-explore-ros2/explore .



USER root
WORKDIR /home/ubuntu/marrtinorobot2_ws/
RUN cp /home/ubuntu/src/marrtinorobot2/install/script/*.sh .

RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build

# Configurazione finale per l'utente 'ubuntu'
USER ubuntu
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "source /home/ubuntu/marrtinorobot2_ws/install/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_BASE=2wd" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_LASER_SENSOR=rplidar" >> /home/ubuntu/.bashrc && \
    echo "export MARRTINOROBOT2_DEPTH_SENSOR=oakdlite" >> /home/ubuntu/.bashrc



# Copia e permessi entrypoint.sh
USER root
COPY ./entrypoint.sh /
RUN chmod +x /entrypoint.sh && dos2unix /entrypoint.sh

# Impostazione entrypoint e variabili d'ambiente
ENTRYPOINT ["/bin/bash", "-c", "/entrypoint.sh"]
ENV USER=ubuntu
ENV PASSWD=ubuntu
