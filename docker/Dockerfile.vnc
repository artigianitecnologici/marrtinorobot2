# Dockerfile per MARRtino software
# Basato su Ubuntu 22.04 (Jammy) e ROS Humble

FROM ubuntu:jammy-20240416

ARG TARGETPLATFORM
LABEL maintainer="ferrarini09@gmail.com"

SHELL ["/bin/bash", "-c"]

# Aggiornamento sistema operativo e installazione pacchetti necessari
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        ubuntu-mate-desktop \
        tigervnc-standalone-server tigervnc-common \
        supervisor wget curl gosu git sudo python3-pip tini \
        build-essential vim lsb-release locales bash-completion tzdata \
        terminator dos2unix net-tools htop && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Installazione noVNC e Websockify
RUN git clone https://github.com/AtsushiSaito/noVNC.git -b add_clipboard_support /usr/lib/novnc && \
    pip install git+https://github.com/novnc/websockify.git@v0.10.0 && \
    ln -s /usr/lib/novnc/vnc.html /usr/lib/novnc/index.html && \
    sed -i "s/UI.initSetting('resize', 'off');/UI.initSetting('resize', 'remote');/g" /usr/lib/novnc/app/ui.js

# Disabilitazione aggiornamenti automatici e crash report
RUN sed -i 's/Prompt=.*/Prompt=never/' /etc/update-manager/release-upgrades && \
    sed -i 's/enabled=1/enabled=0/g' /etc/default/apport

# Installazione ROS Humble (desktop o base in base all'argomento passato)
ENV ROS_DISTRO humble
ARG INSTALL_PACKAGE=desktop

RUN apt-get update && \
    apt-get install -y curl gnupg2 && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-${INSTALL_PACKAGE} \
        python3-argcomplete python3-colcon-common-extensions \
        python3-rosdep python3-vcstool && \
    rosdep init && \
    rm -rf /var/lib/apt/lists/*

RUN rosdep update

# Installazione di pacchetti di simulazione solo su amd64
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-gazebo-ros-pkgs ros-${ROS_DISTRO}-ros-ign && \
    rm -rf /var/lib/apt/lists/*; \
    fi

# Creazione utente 'ubuntu'
RUN useradd -m -s /bin/bash ubuntu && \
    echo "ubuntu:ubuntu" | chpasswd && \
    usermod -aG sudo ubuntu

# Cambio utente a ubuntu
USER ubuntu
WORKDIR /home/ubuntu

# Clonazione del repository marrtinorobot2 e installazione Micro-ROS
RUN mkdir -p /home/ubuntu/marrtinorobot2_ws/src && \
    git clone -b $ROS_DISTRO https://github.com/micro-ROS/micro_ros_setup.git /home/ubuntu/marrtinorobot2_ws/src/micro_ros_setup

USER root
WORKDIR /home/ubuntu/marrtinorobot2_ws

RUN apt-get update && \
    rosdep update --rosdistro=${ROS_DISTRO} && \
    rosdep install --rosdistro=${ROS_DISTRO} --from-paths src -iry --skip-keys micro_ros_agent && \
    rm -rf /var/lib/apt/lists/*

RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build --packages-select micro_ros_setup && \
    source /home/ubuntu/marrtinorobot2_ws/install/setup.bash && \
    ros2 run micro_ros_setup create_agent_ws.sh && \
    ros2 run micro_ros_setup build_agent.sh && \
    colcon build

# Link ai pacchetti di MARRtino robot
USER ubuntu
WORKDIR /home/ubuntu/marrtinorobot2_ws/src

# RUN ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_base . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_bringup . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_description . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_gazebo . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_navigation . && \
#     ln -s /home/ubuntu/src/m-explore-ros2/explore . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_vision . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_voice . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_social . && \
#     ln -s /home/ubuntu/src/marrtinorobot2/marrtinorobot2_cartographer .

# Build finale
WORKDIR /home/ubuntu/marrtinorobot2_ws

USER root
RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build

# Configurazione finale per l'utente ubuntu
USER ubuntu
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> $HOME/.bashrc && \
    echo "source /home/ubuntu/marrtinorobot2_ws/install/setup.bash" >> $HOME/.bashrc && \
    echo "export MARRTINOROBOT2_BASE=2wd" >> $HOME/.bashrc && \
    echo "export MARRTINOROBOT2_LASER_SENSOR=rplidar" >> $HOME/.bashrc && \
    echo "export MARRTINOROBOT2_DEPTH_SENSOR=oakdlite" >> $HOME/.bashrc

# Impostazione dell'entrypoint
USER root
COPY ./entrypoint.sh /
RUN chmod +x /entrypoint.sh && dos2unix /entrypoint.sh
ENTRYPOINT ["/bin/bash", "-c", "/entrypoint.sh"]

# Imposta le variabili d'ambiente
ENV USER=ubuntu
ENV PASSWD=ubuntu
