# Dockerfile.mate
# docker build  -t mate -f Dockerfile.mate .
FROM marrtinorobot2:system 

LABEL maintainer="ferrarini09@gmail.com"

SHELL ["/bin/bash", "-c"]

USER root
# Aggiornamento e installazione di pacchetti necessari
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        ubuntu-mate-desktop \
        tigervnc-standalone-server tigervnc-common \
        supervisor wget curl gosu git sudo python3-pip tini \
        build-essential vim lsb-release locales bash-completion tzdata \
        terminator dos2unix net-tools htop xrdp tmux \
        libgflags-dev nlohmann-json3-dev libgoogle-glog-dev \
        mpg321 sox libttspico-utils \
        v4l-utils && \
    apt-get autoclean && apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*


    
# Installazione noVNC e Websockify
RUN git clone https://github.com/AtsushiSaito/noVNC.git -b add_clipboard_support /usr/lib/novnc && \
    pip install git+https://github.com/novnc/websockify.git@v0.10.0 && \
    ln -s /usr/lib/novnc/vnc.html /usr/lib/novnc/index.html && \
    sed -i "s/UI.initSetting('resize', 'off');/UI.initSetting('resize', 'remote');/g" /usr/lib/novnc/app/ui.js

# Disabilita aggiornamenti automatici e crash report
RUN sed -i 's/Prompt=.*/Prompt=never/' /etc/update-manager/release-upgrades && \
    sed -i 's/enabled=1/enabled=0/g' /etc/default/apport

# Installazione ROS Humble
ENV ROS_DISTRO humble
ARG INSTALL_PACKAGE=desktop

RUN apt-get update && \
    apt-get install -y curl gnupg2 && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-${INSTALL_PACKAGE} \
        python3-argcomplete python3-colcon-common-extensions \
        python3-rosdep python3-vcstool && \
    rosdep init && rosdep update && \
    rm -rf /var/lib/apt/lists/*



# Installazione pacchetti simulazione solo su amd64
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-gazebo-ros-pkgs ros-${ROS_DISTRO}-ros-ign && \
    rm -rf /var/lib/apt/lists/*; \
    fi

USER ubuntu
WORKDIR /home/ubuntu


USER root
WORKDIR /home/ubuntu/marrtinorobot2_ws/
RUN cp /home/ubuntu/src/marrtinorobot2/install/script/*.sh .

RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build

# Copia e permessi entrypoint.sh
USER root
COPY ./entrypoint.sh /
RUN chmod +x /entrypoint.sh && dos2unix /entrypoint.sh

# Impostazione entrypoint e variabili d'ambiente
ENTRYPOINT ["/bin/bash", "-c", "/entrypoint.sh"]
ENV USER=ubuntu
ENV PASSWD=ubuntu
