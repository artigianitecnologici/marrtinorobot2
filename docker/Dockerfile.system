# Docker file for MARRtino2 software
# ROS HUMBLE
# System image - Humble

# docker build -t marrtinorobot2:system -f Dockerfile.system .
FROM osrf/ros:humble-desktop-jammy

ARG MARRTINO_SYSTEM_VERSION=4.2.2

ARG MACHTYPE=default
ARG UID=1000
ARG GID=1000

ARG DEBIAN_FRONTEND=noninteractive

# install bootstrap tools 
RUN apt-get update && apt-get install --no-install-recommends -y \
    tmux less sudo eom nano git \
    openssl shellinabox netcat \
    wget iputils-ping net-tools openssh-client nginx \
    python3-pip libwebsockets-dev \
    build-essential \
    python3-rosdep \
    python3-rosinstall \
    python3-vcstools \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep


# install ros packages
RUN apt-get update && apt-get install -y \
    cmake \
    curl \
    gazebo \
    terminator \
    libglu1-mesa-dev \
    nano \
    python3-pip \
    python3-pydantic \
    python3-vcstool \
    build-essential \
    ros-humble-joint-state-publisher \
    ros-humble-robot-localization \
    ros-humble-plotjuggler-ros \
    ros-humble-robot-state-publisher \
    ros-humble-ros2bag \
    ros-humble-rosbag2-storage-default-plugins \
    ros-humble-rqt-tf-tree \
    ros-humble-rmw-fastrtps-cpp \
    ros-humble-rmw-cyclonedds-cpp \
    ros-humble-slam-toolbox \
    ros-humble-turtlebot3 \
    ros-humble-turtlebot3-msgs \
    ros-humble-twist-mux \
    ros-humble-usb-cam \
    ros-humble-xacro \
    ruby-dev \
    rviz \
    tmux \
    wget \
    xorg-dev \
    zsh

# Bumperbot
RUN command apt-get update && sudo apt-get install -y \
     ros-humble-ros2-controllers \
     ros-humble-ros2-control \
     ros-humble-gazebo-ros \
     ros-humble-gazebo-ros-pkgs \
     ros-humble-gazebo-ros2-control \
     ros-humble-joint-state-publisher-gui \
     ros-humble-joy \
     ros-humble-joy-teleop \
     ros-humble-turtlesim \
     ros-humble-robot-localization \
     ros-humble-tf-transformations

RUN apt-get update && apt-get install -y --no-install-recommends \
        ros-dev-tools \
        ros-humble-ament-* \
    && rm -rf /var/lib/apt/lists/*
# User: robot (password: robot) with sudo power

RUN useradd -ms /bin/bash robot && echo "robot:robot" | chpasswd && adduser robot sudo

RUN usermod -u $UID robot && groupmod -g $GID robot

RUN adduser robot audio
RUN adduser robot video
RUN adduser robot dialout


###### User robot ######

USER robot

# Configuration
RUN echo "export marrtinorobot2_BASE=2wd" >> ~/.bashrc
RUN echo "export marrtinorobot2_LASER_SENSOR=rplidar" >> ~/.bashrc

RUN echo "set -g mouse on" > $HOME/.tmux.conf 

# Python packages

RUN pip3 install --user tornado==5.0.2
RUN pip3 install --user threaded

RUN mkdir -p $HOME/src 
RUN cd $HOME/src/ && \
    git clone  https://github.com/artigianitecnologici/marrtinorobot2.git

#### create workspace
RUN cd $HOME
RUN mkdir -p $HOME/marrtinorobot2_ws/src

#RUN source /opt/ros/humble/setup.bash
RUN cd $HOME/marrtinorobot2_ws/src && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_base . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_bringup . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_description . && \  
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_gazebo . && \
    ln -s $HOME/src/marrtinorobot2/marrtinorobot2_navigation . 

RUN cd $HOME/marrtinorobot2_ws 
#&& \
#    colcon build
#RUN rosdep update && rosdep install --from-path src --ignore-src -y --skip-keys microxrcedds_agent
#RUN source install/setup.bash

# Set working dir and container command

WORKDIR /home/robot

CMD [ "/usr/bin/terminator" ]


